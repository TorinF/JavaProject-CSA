#BlueJ class context
comment0.target=BackgroundPanel
comment0.text=\r\n\ \ Support\ custom\ painting\ on\ a\ panel\ in\ the\ form\ of\r\n\r\n\ \ a)\ images\ -\ that\ can\ be\ scaled,\ tiled\ or\ painted\ at\ original\ size\r\n\ \ b)\ non\ solid\ painting\ -\ that\ can\ be\ done\ by\ using\ a\ Paint\ object\r\n\r\n\ \ Also,\ any\ component\ added\ directly\ to\ this\ panel\ will\ be\ made\r\n\ \ non-opaque\ so\ that\ the\ custom\ painting\ can\ show\ through.\r\n
comment1.params=image
comment1.target=BackgroundPanel(java.awt.Image)
comment1.text=\r\n\ \ Set\ image\ as\ the\ background\ with\ the\ SCALED\ style\r\n
comment10.params=component
comment10.target=void\ add(javax.swing.JComponent)
comment10.text=\r\n\ \ Override\ method\ so\ we\ can\ make\ the\ component\ transparent\r\n
comment11.params=
comment11.target=java.awt.Dimension\ getPreferredSize()
comment11.text=\r\n\ \ Override\ to\ provide\ a\ preferred\ size\ equal\ to\ the\ image\ size\r\n
comment12.params=component\ constraints
comment12.target=void\ add(javax.swing.JComponent,\ java.lang.Object)
comment12.text=\r\n\ \ Override\ method\ so\ we\ can\ make\ the\ component\ transparent\r\n
comment13.params=isTransparentAdd
comment13.target=void\ setTransparentAdd(boolean)
comment13.text=\r\n\ \ Controls\ whether\ components\ added\ to\ this\ panel\ should\ automatically\r\n\ \ be\ made\ transparent.\ That\ is,\ setOpaque(false)\ will\ be\ invoked.\r\n\ \ The\ default\ is\ set\ to\ true.\r\n
comment14.params=component
comment14.target=void\ makeComponentTransparent(javax.swing.JComponent)
comment14.text=\r\n\tTry\ to\ make\ the\ component\ transparent.\r\n\ \ For\ components\ that\ use\ renderers,\ like\ JTable,\ you\ will\ also\ need\ to\r\n\ \ change\ the\ renderer\ to\ be\ transparent.\ An\ easy\ way\ to\ do\ this\ it\ to\r\n\ \ set\ the\ background\ of\ the\ table\ to\ a\ Color\ using\ an\ alpha\ value\ of\ 0.\r\n
comment15.params=g
comment15.target=void\ paintComponent(java.awt.Graphics)
comment15.text=\r\n\ \ Add\ custom\ painting\r\n
comment16.params=g
comment16.target=void\ drawScaled(java.awt.Graphics)
comment16.text=\r\n\ \ Custom\ painting\ code\ for\ drawing\ a\ SCALED\ image\ as\ the\ background\r\n
comment17.params=g
comment17.target=void\ drawTiled(java.awt.Graphics)
comment17.text=\r\n\ \ Custom\ painting\ code\ for\ drawing\ TILED\ images\ as\ the\ background\r\n
comment18.params=g
comment18.target=void\ drawActual(java.awt.Graphics)
comment18.text=\r\n\ \ Custom\ painting\ code\ for\ drawing\ the\ ACTUAL\ image\ as\ the\ background.\r\n\ \ The\ image\ is\ positioned\ in\ the\ panel\ based\ on\ the\ horizontal\ and\r\n\ \ vertical\ alignments\ specified.\r\n
comment2.params=image\ style
comment2.target=BackgroundPanel(java.awt.Image,\ int)
comment2.text=\r\n\ \ Set\ image\ as\ the\ background\ with\ the\ specified\ style\r\n
comment3.params=image\ style\ alignmentX\ alignmentY
comment3.target=BackgroundPanel(java.awt.Image,\ int,\ float,\ float)
comment3.text=\r\n\ \ Set\ image\ as\ the\ backround\ with\ the\ specified\ style\ and\ alignment\r\n
comment4.params=painter
comment4.target=BackgroundPanel(java.awt.Paint)
comment4.text=\r\n\ \ Use\ the\ Paint\ interface\ to\ paint\ a\ background\r\n
comment5.params=image
comment5.target=void\ setImage(java.awt.Image)
comment5.text=\r\n\tSet\ the\ image\ used\ as\ the\ background\r\n
comment6.params=style
comment6.target=void\ setStyle(int)
comment6.text=\r\n\tSet\ the\ style\ used\ to\ paint\ the\ background\ image\r\n
comment7.params=painter
comment7.target=void\ setPaint(java.awt.Paint)
comment7.text=\r\n\tSet\ the\ Paint\ object\ used\ to\ paint\ the\ background\r\n
comment8.params=alignmentX
comment8.target=void\ setImageAlignmentX(float)
comment8.text=\r\n\ \ Specify\ the\ horizontal\ alignment\ of\ the\ image\ when\ using\ ACTUAL\ style\r\n
comment9.params=alignmentY
comment9.target=void\ setImageAlignmentY(float)
comment9.text=\r\n\ \ Specify\ the\ horizontal\ alignment\ of\ the\ image\ when\ using\ ACTUAL\ style\r\n
numComments=19
